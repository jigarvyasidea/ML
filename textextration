from fastapi import FastAPI, Request, Form, File, UploadFile
from fastapi.templating import Jinja2Templates
import spacy

app = FastAPI()


nlp = spacy.load("en_core_web_sm")


templates = Jinja2Templates(directory="templates")


@app.get("/")
async def home(request: Request):
    return templates.TemplateResponse("index.html", {"request": request, "entities": None})


@app.post("/ner")
async def extract_entities(request: Request, text: str = Form(None), file: UploadFile = File(None)):
    entities = []
    input_text = ""

    # ✅ If text is entered manually
    if text:
        input_text = text

    # ✅ If file is uploaded
    elif file:
        contents = await file.read()
        input_text = contents.decode("utf-8")  # Convert bytes to string

    # Perform NER
    if input_text:
        doc = nlp(input_text)
        entities = [{"text": ent.text, "label": ent.label_} for ent in doc.ents]

    return templates.TemplateResponse("index.html", {"request": request, "entities": entities, "input_text": input_text})
